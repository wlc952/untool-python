name: Publish Python Package

on:
  # 1. push tag 时，只发到 TestPyPI
  push:
    tags:
      - 'v*.*.*'

  # 2. 发布 GitHub Release 时，发到 PyPI
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build twine

      - name: Build dist
        run: |
          python -m build --sdist --wheel

  publish-testpypi:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install twine
        run: python -m pip install --upgrade pip twine

      - name: Publish to TestPyPI
        env:
          TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload \
            --repository testpypi \
            --non-interactive \
            -u __token__ \
            -p "$TEST_PYPI_API_TOKEN" \
            dist/*

  publish-pypi:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install twine
        run: python -m pip install --upgrade pip twine

      - name: Publish to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload \
            --non-interactive \
            -u __token__ \
            -p "$PYPI_API_TOKEN" \
            dist/*
